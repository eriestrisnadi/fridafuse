name: Publish to PyPI and TestPyPI

on:
  push:
    tags: [v*]

jobs:
  build:
    uses: ./.github/workflows/build.yml

  publish-to-pypi:
    needs: [build]
    name: Publish distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/fridafuse
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - uses: lewagon/wait-on-check-action@v1.3.4
      with:
        ref: ${{ github.ref }}
        running-workflow-name: 'Publish distribution to PyPI'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        check-regexp: Test\s&\sCoverage\son\sPython.
        wait-interval: 10
        allowed-conclusions: success
    - uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    needs: [build]
    name: Publish distribution to TestPyPI
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/fridafuse
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

  github-release:
    needs: [publish-to-pypi]
    name: Sign with Sigstore and upload to GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh release create
        "$GITHUB_REF_NAME"
        --repo "$GITHUB_REPOSITORY"
        --notes ""
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"
